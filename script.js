let currentUser = null;
let userBalance = 0;

const casesData = {
    'fc-case': {
        name: 'FC-CASE',
        price: 400,
        items: [
            { amount: 100, chance: 30 },
            { amount: 300, chance: 25 },
            { amount: 450, chance: 25 },
            { amount: 500, chance: 15 },
            { amount: 1000, chance: 5 }
        ]
    }
};

let gameLogs = [];

function acceptConsent() {
    const checkbox = document.getElementById("consent");
    if (checkbox.checked) {
        document.getElementById("consent-section").style.display = "none";
        document.getElementById("nickname-section").style.display = "block";
        showNotification("üéâ –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Å–æ–≥–ª–∞—Å–∏–µ! –ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã –≤ ECasino!");
    } else {
        showNotification("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è");
    }
}

function submitNickname() {
    const nicknameInput = document.getElementById("nickname");
    const nickname = nicknameInput.value.trim();
    
    if (!nickname) {
        showNotification("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º");
        nicknameInput.focus();
        return;
    }
    
    if (nickname.length < 3) {
        showNotification("üìù –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞");
        nicknameInput.focus();
        return;
    }
    
    currentUser = nickname;
    document.getElementById("nickname-section").style.display = "none";
    document.getElementById("profile-section").style.display = "block";
    
    document.getElementById("user-nick").innerText = nickname;
    document.getElementById("header-nickname").innerText = nickname;
    
    document.getElementById("user-header").style.display = "flex";
    
    userBalance = 0;
    updateBalance(userBalance);
    
    showNotification("‚úÖ –ù–∏–∫–Ω–µ–π–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ECasino!");
}

function updateBalance(newBalance) {
    userBalance = newBalance;
    document.getElementById("user-balance").innerText = userBalance;
    document.getElementById("header-balance").innerText = userBalance;
}

function showDepositForm() {
    document.getElementById("profile-section").style.display = "none";
    document.getElementById("deposit-section").style.display = "block";
    document.getElementById("deposit-amount").value = "";
    document.getElementById("deposit-consent").checked = false;
    calculateCommission();
}

function showCases() {
    document.getElementById("profile-section").style.display = "none";
    document.getElementById("cases-section").style.display = "block";
}

function showInventory() {
    showNotification("üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–æ–≤!");
}

function showWithdraw() {
    showNotification("üì§ –í—ã–≤–æ–¥ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞!");
}

function backToProfile() {
    const sections = ['cases-section', 'deposit-section', 'inventory-section', 'withdraw-section'];
    sections.forEach(section => {
        document.getElementById(section).style.display = 'none';
    });
    document.getElementById("profile-section").style.display = "block";
}

function calculateCommission() {
    const amount = parseInt(document.getElementById("deposit-amount").value) || 0;
    const commission = Math.floor(amount * 0.02);
    const finalAmount = amount - commission;
    
    document.getElementById("commission-calculation").innerHTML = 
        `üìä –ö–æ–º–∏—Å—Å–∏—è ECasino: <strong>${commission} FC</strong> (2% –æ—Ç ${amount} FC)`;
    
    document.getElementById("final-amount").innerHTML = 
        `üéØ –í—ã –ø–æ–ª—É—á–∏—Ç–µ: <strong>${finalAmount} FC</strong> –Ω–∞ –±–∞–ª–∞–Ω—Å`;
}

function createDepositOrder() {
    const amount = parseInt(document.getElementById("deposit-amount").value);
    const consent = document.getElementById("deposit-consent").checked;
    
    if (!amount || amount <= 0) {
        showNotification("üî¢ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É");
        return;
    }
    
    if (!consent) {
        showNotification("‚úÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏");
        return;
    }
    
    const commission = Math.floor(amount * 0.02);
    const finalAmount = amount - commission;
    
    showNotification(
        `üíé –°–æ–∑–¥–∞–Ω –æ—Ä–¥–µ—Ä –Ω–∞ ${amount} FC\n` +
        `üìâ –ö–æ–º–∏—Å—Å–∏—è: ${commission} FC (2%)\n` +
        `üéØ –ö –∑–∞—á–∏—Å–ª–µ–Ω–∏—é: ${finalAmount} FC\n\n` +
        `‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!`
    );
    
    setTimeout(() => {
        backToProfile();
    }, 3000);
}

function openCase(caseType) {
    const caseData = casesData[caseType];
    
    if (!caseData) {
        showNotification("‚ùå –û—à–∏–±–∫–∞: –∫–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω");
        return;
    }
    
    if (userBalance < caseData.price) {
        showNotification(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ FC –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞!\nüíé –ù—É–∂–Ω–æ: ${caseData.price} FC`);
        return;
    }
    
    updateBalance(userBalance - caseData.price);
    startCaseAnimation(caseData);
}

function startCaseAnimation(caseData) {
    const animation = document.createElement('div');
    animation.className = 'case-animation';
    animation.innerHTML = `
        <div class="spinning-item">üé∞</div>
        <div class="spinning-item">üé≤</div>
        <div class="spinning-item">üéØ</div>
    `;
    document.body.appendChild(animation);
    
    setTimeout(() => {
        const winAmount = calculateWin(caseData.items);
        
        animation.innerHTML = `
            <div class="result-item">üéâ –í–´ –í–´–ò–ì–†–ê–õ–ò!</div>
            <div class="result-item">${winAmount} FC üíé</div>
            <div class="result-item">üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</div>
        `;
        
        updateBalance(userBalance + winAmount);
        addToGameLogs(caseData.name, winAmount);
        
        setTimeout(() => {
            document.body.removeChild(animation);
            showNotification(`üéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${winAmount} FC!`);
        }, 5000);
    }, 3000);
}

function calculateWin(items) {
    const random = Math.random() * 100;
    let accumulatedChance = 0;
    
    for (const item of items) {
        accumulatedChance += item.chance;
        if (random <= accumulatedChance) {
            return item.amount;
        }
    }
    
    return items[0].amount;
}

function addToGameLogs(caseName, winAmount) {
    const logEntry = {
        timestamp: new Date().toLocaleString(),
        username: currentUser,
        case: caseName,
        amount: winAmount
    };
    
    gameLogs.unshift(logEntry);
    if (gameLogs.length > 100) {
        gameLogs = gameLogs.slice(0, 100);
    }
}

function showNotification(message) {
    const toast = document.createElement('div');
    toast.style.cssText = `
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0, 0, 0, 0.9);
        color: #ffd700;
        padding: 15px 25px;
        border-radius: 15px;
        border: 2px solid rgba(255, 215, 0, 0.3);
        backdrop-filter: blur(10px);
        z-index: 1000;
        font-size: 1.1em;
        font-weight: 500;
        text-align: center;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.7);
        animation: slideIn 0.3s ease-out;
    `;
    
    toast.innerHTML = message;
    document.body.appendChild(toast);
    
    setTimeout(() => {
        toast.style.animation = 'slideOut 0.3s ease-in';
        setTimeout(() => document.body.removeChild(toast), 300);
    }, 3000);
}

document.addEventListener('DOMContentLoaded', function() {
    const observer = new MutationObserver(function(mutations) {
        mutations.forEach(function(mutation) {
            if (mutation.type === 'attributes' && mutation.attributeName === 'style') {
                const nicknameSection = document.getElementById('nickname-section');
                if (nicknameSection.style.display === 'block') {
                    document.getElementById('nickname').focus();
                }
            }
        });
    });
    
    observer.observe(document.getElementById('nickname-section'), {
        attributes: true,
        attributeFilter: ['style']
    });
    
    showNotification("üé∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ECasino! –ì–æ—Ç–æ–≤—ã –∫ –±–æ–ª—å—à–∏–º –≤—ã–∏–≥—Ä—ã—à–∞–º?");
});
